# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Trivy docker image security check

on:
  schedule:
    - cron: '0 0 * * *' # do it every day

permissions:
  contents: read

jobs:
  trivy:
    if: github.repository_owner == 'e-m-b-a'
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Trivy-Build
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          swap-storage: true
      - name: Generate tarball from image
        run: |
          docker pull embeddedanalyzer/emba
          docker save -o vuln-image.tar embeddedanalyzer/emba

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          input: /github/workspace/vuln-image.tar
          timeout: "60m"
          skip-dirs: "/external/semgrep-rules,/external/routersploit,/external/arachni,/etc/ssl/private/"
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
